{"ast":null,"code":"var _jsxFileName = \"/Users/dheerendradev/Desktop/React&Redux/react-redux/src/Components/Posts.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/posts').then(response => {\n      console.log(response);\n      this.setState({\n        posts: response.data.slice(0, 10)\n      });\n    });\n  }\n\n  render() {\n    let posts = this.state.posts;\n    let postList = posts.map(post => {\n      return React.createElement(\"div\", {\n        class: \"card blue-grey darken-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card-content white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Card Title\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.\")));\n    });\n    return React.createElement(\"div\", {\n      className: \"conatainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/dheerendradev/Desktop/React&Redux/react-redux/src/Components/Posts.js"],"names":["React","axios","Posts","Component","constructor","props","state","posts","componentDidMount","get","then","response","console","log","setState","data","slice","render","postList","map","post"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAY;AACRC,MAAAA,KAAK,EAAG;AADA,KAAZ;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfP,IAAAA,KAAK,CAACQ,GAAN,CAAU,4CAAV,EACCC,IADD,CACOC,QAAD,IAAY;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AACVP,QAAAA,KAAK,EAAGI,QAAQ,CAACI,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAsB,EAAtB;AADE,OAAd;AAGH,KAND;AAOH;;AACDC,EAAAA,MAAM,GAAE;AAAA,QACCV,KADD,GACU,KAAKD,KADf,CACCC,KADD;AAEJ,QAAIW,QAAQ,GAAGX,KAAK,CAACY,GAAN,CAAWC,IAAD,IAAQ;AAC7B,aACI;AAAK,QAAA,KAAK,EAAC,yBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,yBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,KAAK,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2JAFA,CADJ,CADJ;AASH,KAVc,CAAf;AAWA,WACI;AAAK,MAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AApC8B;;AAuCnC,eAAelB,KAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Posts extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state ={\n            posts : []\n        }\n    }\n\n    componentDidMount(){\n        axios.get('https://jsonplaceholder.typicode.com/posts')\n        .then((response)=>{\n            console.log(response)\n            this.setState({\n                posts : response.data.slice(0,10)\n            })\n        })\n    }\n    render(){\n        let {posts} = this.state ;\n        let postList = posts.map((post)=>{\n            return(\n                <div class=\"card blue-grey darken-1\">\n                    <div class=\"card-content white-text\">\n                    <span class=\"card-title\">Card Title</span>\n                    <p>I am a very simple card. I am good at containing small bits of information.\n                    I am convenient because I require little markup to use effectively.</p>\n                    </div>\n                </div>\n            )\n        })\n        return(\n            <div className =\"conatainer\">\n\n            </div>\n        )\n    }\n}\n\nexport default Posts"]},"metadata":{},"sourceType":"module"}