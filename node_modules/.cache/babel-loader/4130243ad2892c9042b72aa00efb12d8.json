{"ast":null,"code":"var _jsxFileName = \"/Users/dheerendradev/Desktop/React&Redux/react-redux/src/Components/Comments.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass Comments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/comments').then(response => {\n      console.log(response);\n      this.setState({\n        comments: response.data.slice(0, 10)\n      });\n    });\n  }\n\n  render() {\n    let comments = this.state.comments;\n    let commentList = comments.map(comment => {\n      return React.createElement(\"div\", {\n        class: \"card blue-grey darken-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card-content white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Card Title\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.\")));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/dheerendradev/Desktop/React&Redux/react-redux/src/Components/Comments.js"],"names":["React","axios","Comments","Component","constructor","props","state","comments","componentDidMount","get","then","response","console","log","setState","data","slice","render","commentList","map","comment"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG;AADF,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACfP,IAAAA,KAAK,CAACQ,GAAN,CAAU,+CAAV,EACCC,IADD,CACOC,QAAD,IAAY;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AACVP,QAAAA,QAAQ,EAAGI,QAAQ,CAACI,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAsB,EAAtB;AADD,OAAd;AAGH,KAND;AAOH;;AACDC,EAAAA,MAAM,GAAE;AAAA,QACCV,QADD,GACa,KAAKD,KADlB,CACCC,QADD;AAEJ,QAAIW,WAAW,GAAGX,QAAQ,CAACY,GAAT,CAAcC,OAAD,IAAW;AACtC,aACK;AAAK,QAAA,KAAK,EAAC,yBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,KAAK,EAAC,yBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,KAAK,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2JAFA,CADH,CADL;AASH,KAViB,CAAlB;AAWA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAnCiC;;AAsCtC,eAAelB,QAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Comments extends React.Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            comments : []\n        }\n    }\n    componentDidMount(){\n        axios.get('https://jsonplaceholder.typicode.com/comments')\n        .then((response)=>{\n            console.log(response)\n            this.setState({\n                comments : response.data.slice(0,10)\n            })\n        })\n    }\n    render(){\n        let {comments} = this.state ;\n        let commentList = comments.map((comment)=>{\n            return(\n                 <div class=\"card blue-grey darken-1\">\n                    <div class=\"card-content white-text\">\n                    <span class=\"card-title\">Card Title</span>\n                    <p>I am a very simple card. I am good at containing small bits of information.\n                    I am convenient because I require little markup to use effectively.</p>\n                    </div>\n                </div>\n            )\n        })\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n\nexport default Comments"]},"metadata":{},"sourceType":"module"}